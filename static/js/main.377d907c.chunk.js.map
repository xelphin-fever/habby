{"version":3,"sources":["helper/constants.js","stylesheets/components/icons.js","components/Timer.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["theme","Circle","styled","div","props","size","color","textColor","IconText","moveRight","moveUp","Timer","useState","second","setSecond","minute","setMinute","hour","setHour","isActive","setIsActive","counter","setCounter","useEffect","intervalId","setInterval","secondCounter","minuteCounter","Math","floor","hourCounter","computedSecond","String","length","computedMinute","computedHour","clearInterval","timerActive","console","log","className","Home","timerMode","setTimerMode","timerStart","setTimerStart","iconSize","iconColor","iconTextColor","onClick","style","fontSize","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.377d907c.chunk.js","sourcesContent":["\nconst theme = {\n  \"dark\": \"#264653\",\n  \"light\": \"#E9C46A\",\n  \"color1\":\"#2A9D8F\",\n  \"color2\":\"#E76F51\",\n  \"color3\":\"#F4A261\"\n};\n\nexport {theme};","import styled from 'styled-components';\n\nconst Circle = styled.div`\n  width: ${props => props.size+\"px\" || \"75px\"};\n  height: ${props => props.size+\"px\" || \"75px\"};\n  border-radius: 50%;\n  background-color: ${props => props.color || \"black\"};\n  font-size: ${props => (props.size/4)+\"px\" || \"75px\"};\n  color: ${props => props.textColor || \"black\"};\n  text-align: center;\n  line-height: ${props => props.size+\"px\" || \"75px\"};\n`;\n\nconst IconText = styled.div`\n  position: relative;\n  h1 {\n    position: absolute;\n    top: 0;\n    margin: 0;\n    left: ${props => props.moveRight+\"px\" || \"0\"};\n    text-align: center;\n    line-height: ${props => (props.size-props.moveUp)+\"px\" || \"75px\"};\n    width: ${props => props.size+\"px\" || \"75px\"};\n    color: ${props => props.textColor || \"black\"};\n    font-size: ${props => (props.size/5.5)+\"px\" || \"75px\"};\n  }\n`;\n\nexport {Circle, IconText};","import React, { useState, useEffect, useRef} from 'react';\n\n// Timer Code From: https://dev.to/emmaadesile/build-a-timer-using-react-hooks-3he2\n\nconst Timer = (props) => {\n\n  const [second, setSecond] = useState('00');\n  const [minute, setMinute] = useState('00');\n  const [hour, setHour] = useState('00');\n  const [isActive, setIsActive] = useState(false);\n  const [counter, setCounter] = useState(0);\n\n  // TODO: If timer starts on one day and ends on another, between day flip, stop and start timer\n  // TODO: Once timer stops, update firebase days activities array (maybe use helper function)\n\n  // Initialize and Continue Counter\n  useEffect(() => {\n    let intervalId;\n    if (isActive) {\n      intervalId = setInterval(() => {\n        const secondCounter = counter % 60;\n        const minuteCounter = Math.floor(counter / 60);\n        const hourCounter = Math.floor(counter / 3600);\n\n        const computedSecond = String(secondCounter).length === 1 ? `0${secondCounter}`: secondCounter;\n        const computedMinute = String(minuteCounter).length === 1 ? `0${minuteCounter}`: minuteCounter;\n        const computedHour = String(hourCounter).length === 1 ? `0${hourCounter}`: hourCounter;\n\n        setSecond(computedSecond);\n        setMinute(computedMinute);\n        setHour(computedHour);\n        setCounter(counter => counter + 1);\n      }, 1000)\n    }\n    return () => {\n      return clearInterval(intervalId)\n    };\n  }, [isActive, counter])\n\n  // Record Counter\n  useEffect(()=> {\n    if (props.timerActive === false){\n      if (counter!==0){\n        // TODO: Record counter into firebase \n        console.log('Counter timerActive: ', counter)\n        setIsActive(false);\n      }\n      setCounter(0);\n    } else {\n      setIsActive(true);\n    }\n    \n  }, [props.timerActive])\n\n\n  return (\n    <div className=\"timer\">\n        <h1>\n          <span className=\"timer-hour\">{hour}</span>\n          <span>:</span>\n          <span className=\"timer-minute\">{minute}</span>\n          <span>:</span>\n          <span className=\"timer-second\">{second}</span>\n        </h1>\n    </div>\n  );\n}\n\nexport default Timer;","\n// APP IMPORTS\nimport React, {useState, useEffect} from 'react';\nimport { Link } from \"react-router-dom\";\nimport '../stylesheets/pages/Home.scss';\nimport {theme} from '../helper/constants';\n// Components\nimport {Circle, IconText} from '../stylesheets/components/icons';\nimport FlagIcon from '@material-ui/icons/Flag';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport Timer from '../components/Timer';\n\n//\nconst Home = (props) => {\n\n  const [timerMode, setTimerMode] = useState(\"START\");\n  const [timerStart, setTimerStart] = useState(false);\n\n  // Stop/Start Timer\n  const changeTimerMode = () => {\n    if (timerStart === false) {\n      setTimerMode(\"STOP\");\n      // props.dispatchTimer({type: 'start'});\n      setTimerStart(true);\n    } else {\n      setTimerMode(\"START\");\n      // props.dispatchTimer({type: 'stop'});\n      setTimerStart(false);\n    }\n  }\n\n\n  // Page Constants\n  const iconSize = 280;\n  const iconColor = theme.light;\n  const iconTextColor = \"white\";\n  // Return JSX\n  return (\n    <div className=\"page-home\">\n      <div className=\"home-top\">\n        {/* ACTIVITY SELECT */}\n        <div className=\"home-activity\">\n          <Circle color={theme.color2} size={120} /> {/* TODO:  Change Color/Title depending on selected Activity Id*/}\n          <h2>Reading</h2>\n        </div>\n        {/* TIMER */}\n        <div className=\"home-timer\">\n          <button onClick={changeTimerMode}>{timerMode}</button>\n          <Timer timerActive={timerStart}/>\n        </div>\n        {/* PROGRESS */}\n      </div>\n\n      {/* ICONS - BOTTOM BAR */}\n      <div className=\"home-bottom-bar\">\n        <div className=\"home-bottom\"> {/* TODO: Add Links to Icons to appropriate pages */}\n          {/* TAGS */}\n          <IconText size={iconSize} textColor={iconTextColor} moveUp={0}>\n            <BookmarkIcon className=\"home-icon\" style={{ fontSize: iconSize, color: iconColor }}/>\n            <h1>TAGS</h1>\n          </IconText>\n          {/* STATS */}\n          <IconText size={(iconSize-10)} textColor={iconTextColor} moveUp={0}>\n            <Circle color= {iconColor} size={(iconSize-10)}/>\n            <h1 style={{fontSize: ((iconSize-10)/4)}}>STATS</h1>\n          </IconText>\n          {/* GOALS */}\n          <IconText size={(iconSize)} textColor={iconTextColor} moveUp={30} moveRight={18}>\n            <FlagIcon className=\"home-icon\" style={{ fontSize: (iconSize+20), color: iconColor }}/>\n            <h1>GOALS</h1>\n          </IconText>\n        </div>\n      </div>\n      \n    </div>\n  )\n}\n\nexport default Home;\n","import './App.scss';\nimport React, {useState, useEffect, useReducer} from 'react';\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport {theme} from './helper/constants';\n\nimport Home from './pages/Home'\n\nfunction App() {\n\n  // TODO: Instead of stateColor/stateActivity collect from firebase current activity id and then collect title+color\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch> \n          <Route exact path='/habby/' component={() => <Home  />}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}